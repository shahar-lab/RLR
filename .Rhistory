save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 200,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 200,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 200,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 200,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 200,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 200,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
?sample
load("~/R/0014_IdoNoa_Outcome-irrelevant-MB-MF/randomwalk_ 4 arms_ 200 trials.rdata")
View(R)
rm(list = ls())
# Regression for MF main effect -------------------------------------------
library(lme4)
library(tidyverse)
library(tidylog)
load('data/analysis_data/df_column_preprocessing.Rdata')
#we take valid trials in which the chosen person appears again and the pair shares an object.
mf_df=df%>%filter(reoffer_chosen_person==1,shares_object==1,abort==FALSE)%>%na.omit()
mf_descriptive = mf_df%>%group_by(common_mf_reward_oneback,unique_mf_reward_oneback)%>%summarise(mean(stay_person))
mf_descriptive%>%View()
mf_analysis=glmer(stay_person~common_mf_reward_oneback*unique_mf_reward_oneback+(common_mf_reward_oneback*unique_mf_reward_oneback|subject),family=binomial(link="logit"),data=mf_df)
summary(mf_analysis)
source("~/R/packages/RLR/R/randomwalk.R")
rm(list = ls())
# Regression for MF main effect -------------------------------------------
library(lme4)
library(tidyverse)
library(tidylog)
library(car)
library(effects)
load('data/analysis_data/df_column_preprocessing.Rdata')
#we take valid trials in which the chosen person appears again and the pair shares an object.
mb_key_df=df%>%filter(reoffer_chosen_person==0,shares_object==1,abort==FALSE)%>%na.omit()
mb_key_descriptive = mb_key_df%>%group_by(common_mb_location_congruency,common_mb_reward_oneback)%>%summarise(mean(generalize))
mb_key_descriptive%>%View()
mb_key_analysis=glmer(generalize~common_mb_location_congruency*common_mb_reward_oneback*common_mb_probs_oneback+(common_mb_location_congruency*common_mb_reward_oneback|subject),family=binomial(link="logit"),data=mb_key_df)
summary(mb_key_analysis)
Anova(mb_key_analysis)
plot(effect('common_mb_location_congruency:common_mb_reward_oneback',mb_key_analysis ))
#we take valid trials in which the chosen person appears again and the pair shares an object.
mb_key_df=df%>%filter(reoffer_chosen_person==0,shares_object==1,abort==FALSE)%>%na.omit()
rm(list = ls())
# Regression for MF main effect -------------------------------------------
library(lme4)
library(tidyverse)
library(tidylog)
library(car)
library(effects)
load('data/analysis_data/df_column_preprocessing.Rdata')
library(RLR)
?randomwalk
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
randomwalk(
Narms = 4,
Ntrials = 250,
tau = 0.02,
rho = 0,
upper.bound = 0.85,
lower.bound = 0.15,
plot = TRUE,
save = TRUE
)
library(RLR)
?sample_values
?sample_values
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
my_xyplot
library(RLR)
?my_xyplot
x=c(1,2,3)
y=c(4,5,6)
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
library(RLR)
?my_xyplot
?my_xyplot
library(RLR)
?my_xyplot
library(raincloudplots)
df_1x1 <- data_1x1(
array_1 = iris$Sepal.Length[1:50],
array_2 = iris$Sepal.Length[51:100],
jit_distance = .09,
jit_seed = 321)
data_1x1
raincloud_2 <- raincloud_1x1_repmes(
data = df_1x1,
colors = (c('dodgerblue', 'darkorange')),
fills = (c('dodgerblue', 'darkorange')),
line_color = 'gray',
line_alpha = .3,
size = 1,
alpha = .6,
align_clouds = FALSE) +
scale_x_continuous(breaks=c(1,2), labels=c("Pre", "Post"), limits=c(0, 3)) +
xlab("Time") +
ylab("Score") +
theme_classic()
raincloud_2
library(RLR)
?my_raincloud
library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages("broom")
install.packages("tidyverse")
install.packages(c("backports", "BH", "carData", "datawizard", "DBI", "distributional", "effects", "emmeans", "fansi", "gert", "glue", "httpuv", "igraph", "insight", "IRdisplay", "IRkernel", "knitr", "openssl", "parallelly", "pkgbuild", "posterior", "RcppArmadillo", "RcppParallel", "repr", "rstan", "shinyjs", "tidybayes", "tinytex", "V8", "xfun"))
install.packages(c("backports", "BH", "carData", "datawizard", "DBI", "distributional", "effects", "emmeans", "fansi", "gert", "glue", "httpuv", "igraph", "insight", "IRdisplay", "IRkernel", "knitr", "openssl", "parallelly", "pkgbuild", "posterior", "RcppArmadillo", "RcppParallel", "repr", "rstan", "shinyjs", "tidybayes", "tinytex", "V8", "xfun"))
install.packages(c("backports", "BH", "carData", "datawizard", "DBI", "distributional", "effects", "emmeans", "fansi", "gert", "glue", "httpuv", "igraph", "insight", "IRdisplay", "IRkernel", "knitr", "openssl", "parallelly", "pkgbuild", "posterior", "RcppArmadillo", "RcppParallel", "repr", "rstan", "shinyjs", "tidybayes", "tinytex", "V8", "xfun"))
install.packages(c("backports", "BH", "carData", "datawizard", "DBI", "distributional", "effects", "emmeans", "fansi", "gert", "glue", "httpuv", "igraph", "insight", "IRdisplay", "IRkernel", "knitr", "openssl", "parallelly", "pkgbuild", "posterior", "RcppArmadillo", "RcppParallel", "repr", "rstan", "shinyjs", "tidybayes", "tinytex", "V8", "xfun"))
install.packages(c("backports", "BH", "carData", "datawizard", "DBI", "distributional", "effects", "emmeans", "fansi", "gert", "glue", "httpuv", "igraph", "insight", "IRdisplay", "IRkernel", "knitr", "openssl", "parallelly", "pkgbuild", "posterior", "RcppArmadillo", "RcppParallel", "repr", "rstan", "shinyjs", "tidybayes", "tinytex", "V8", "xfun"))
library(RLR)
?my_raincloud
library(RLR)
library(RLR)
library(RLR)
library(RLR)
?make_mystandata
library(RLR)
library(raincloudplots)
load("~/R/2021_counterfactual_credit_assignment/data/brms_model_comparison_data/lpd_point.Rdata")
View(lpd_point)
load("~/R/2021_counterfactual_credit_assignment/data/brms_model_comparison_data/loo_null_unch.Rdata")
load("~/R/2021_counterfactual_credit_assignment/data/brms_model_comparison_data/loo_rw_unch.Rdata")
load("~/R/2021_counterfactual_credit_assignment/data/brms_model_comparison_data/loo_rw_unch_cond.Rdata")
lpd_point_unch <- cbind(loo_null_unch$pointwise[,"elpd_loo"],
loo_rw_unch$pointwise[,"elpd_loo"],
loo_rw_unch_cond$pointwise[,"elpd_loo"])
stacking_weights(lpd_point_unch)
save(lpd_point_unch, file = 'data/brms_model_comparison_data/lpd_point_unch.Rdata')
library("bayesplot")
library("loo")
library("brms")
library(dplyr)
library(tidyverse)
library(bayestestR)
lpd_point_unch <- cbind(loo_null_unch$pointwise[,"elpd_loo"],
loo_rw_unch$pointwise[,"elpd_loo"],
loo_rw_unch_cond$pointwise[,"elpd_loo"])
stacking_weights(lpd_point_unch)
save(lpd_point_unch, file = 'data/brms_model_comparison_data/lpd_point_unch.Rdata')
lpd_point_unch <- cbind(loo_null_unch$pointwise[,"elpd_loo"],
loo_rw_unch$pointwise[,"elpd_loo"],
loo_rw_unch_cond$pointwise[,"elpd_loo"])
#stacking weights
lpd_point_unch <- cbind(loo_null_unch$pointwise[,"elpd_loo"],
loo_rw_unch$pointwise[,"elpd_loo"],
loo_rw_unch_cond$pointwise[,"elpd_loo"])
lpd_point_unch
stacking_weights(lpd_point_unch)
getwd()
gc()
if (!require(remotes)) {
install.packages("remotes")
}
remotes::install_github('jorvlan/raincloudplots')
library(raincloudplots)
df_1x1 <- data_1x1(
array_1 = df[,x_str],
array_2 = df[,y_str],
jit_distance = .09,
jit_seed = 321)
library(raincloudplots)
library(raincloudplots)
if (!require(remotes)) {
install.packages("remotes")
}
remotes::install_github('jorvlan/raincloudplots')
if (!require(remotes)) {
install.packages("remotes")
}
remotes::install_github('jorvlan/raincloudplots',force=TRUE)
library(raincloudplots)
install.packages("rlang")
install.packages("rlang")
library(raincloudplots)
library(RLR)
?my_posteriorplot
load("~/R/2021_counterfactual_credit_assignment/data/brms_data/model_rw_ch_medium.Rdata")
?my_posteriorplot
my_posteriorplot(bayes_rw_medium,"reward_oneback_blabla","purple",c(0.1,1.1),"0.7")
my_posteriorplot(bayes_rw_medium,"reward_oneback_blabla",purple,c(0.1,1.1),"0.7")
my_posteriorplot(bayes_rw_medium,"reward_oneback_blabla","purple",c(0.1,1.1),0.7)
bayes_rw_medium$data
bayes_rw_medium
insight::get_parameters(bayes_rw_medium)
?insight::get_parameters
a=insight::get_parameters
a['b_rw_oneback']
a[,'b_rw_oneback']
a[1,'b_rw_oneback']
a[,'b_rw_oneback']
a
a
insight::get_parameters()
View(a)
insight::get_parameters(bayes_rw_medium)
a=insight::get_parameters(bayes_rw_medium)
a$b_rw_oneback
library(RLR)
my_posteriorplot(bayes_rw_medium,"reward_oneback_blabla","purple",c(0.1,1.1),0.7)
my_posteriorplot(bayes_rw_medium,"reward_oneback","purple",c(0.1,1.1),0.7)
View(bayes_rw_medium)
my_posteriorplot(bayes_rw_medium,"rw_oneback","purple",c(0.1,1.1),0.7)
my_posteriorplot(bayes_rw_medium,"rw_oneback1","purple",c(0.1,1.1),0.7)
bayes_rw_medium
insight::get_parameters(bayes_rw_medium)
paste0("b_",myxlabel)
my_posteriorplot(bayes_rw_medium,"rw_oneback1","purple",c(0.1,1.1),0.7)
my_posteriorplot(bayes_rw_medium,"rw_oneback","purple",c(0.1,1.1),0.7)
?hdi
??hdi
library(bayestestR)
my_posteriorplot(bayes_rw_medium,"rw_oneback","purple",c(0.1,1.1),0.7)
library(RLR)
my_posteriorplot(bayes_rw_medium,"rw_oneback","purple")
max(insight::get_parameters(bayes_rw_medium))
my_posteriorplot<-function(model,variable_name,xlabel,mycolor){
library(ggplot2)
library(insight)
library(bayestestR)
params=insight::get_parameters(model)
variable=params[,paste0("b_",variable_name)]
ggplot(data.frame(x=variable),aes(x=variable))+geom_density(alpha = .5,fill=mycolor)+
geom_vline(xintercept = median(variable), linetype="dotted",color = "blue", size=1.5)+
geom_segment(aes(x = hdi(variable, ci = 0.95)$CI_low, y = 0, xend = hdi(variable, ci = 0.95)$CI_high, yend = 0),color="darkgray",size=2,show.legend = F)+
xlab(variable_name)+ ylab("Density") + theme_classic()
}
my_posteriorplot(bayes_rw_medium,"rw_oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot<-function(model,variable_name,xlabel,mycolor){
library(ggplot2)
library(insight)
library(bayestestR)
params=insight::get_parameters(model)
variable=params[,paste0("b_",variable_name)]
ggplot(data.frame(x=variable),aes(x=variable))+geom_density(alpha = .5,fill=mycolor)+
geom_vline(xintercept = median(variable), linetype="dotted",color = "blue", size=1.5)+
geom_segment(aes(x = hdi(variable, ci = 0.95)$CI_low, y = 0, xend = hdi(variable, ci = 0.95)$CI_high, yend = 0),color="darkgray",size=2,show.legend = F)+
xlab(xlabel)+ ylab("Density") + theme_classic()
}
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
my_posteriorplot(bayes_rw_medium,"rw_oneback","Reward Oneback","purple")
load("C:/Users/idoib/Downloads/brms_unchosen_weakly_informative_priors_rt_oneback.rdata")
load("C:/Users/idoib/Downloads/brms_unchosen_weakly_informative_priors_delta_abs_exp.rdata")
model
model
